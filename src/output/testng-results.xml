<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Mercurry travels Sanity Test suite" duration-ms="92978" started-at="2018-09-15T09:49:35Z" finished-at="2018-09-15T09:51:08Z">
    <groups>
    </groups>
    <test name="Test Extent reports" duration-ms="92978" started-at="2018-09-15T09:49:35Z" finished-at="2018-09-15T09:51:08Z">
      <class name="com.mercuryTravels.testDateOfReturnFiledVisibility">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="beforeTest" is-config="true" duration-ms="250" started-at="2018-09-15T09:50:28Z" finished-at="2018-09-15T09:50:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="verifyDefaultSelectedTrip()[pri:100, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="verifyDefaultSelectedTrip" duration-ms="20461" started-at="2018-09-15T09:50:28Z" finished-at="2018-09-15T09:50:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDefaultSelectedTrip -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-15T09:50:28Z" finished-at="2018-09-15T09:50:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mercuryTravels.testDateOfReturnFiledVisibility.verifyDefaultSelectedTrip() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="tearDown" is-config="true" duration-ms="2112" started-at="2018-09-15T09:50:49Z" finished-at="2018-09-15T09:50:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDefaultSelectedTrip status=SUCCESS method=testDateOfReturnFiledVisibility.verifyDefaultSelectedTrip()[pri:100, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="verifyDateOfReturnFiledVisibility()[pri:200, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="verifyDateOfReturnFiledVisibility" duration-ms="15048" started-at="2018-09-15T09:50:51Z" finished-at="2018-09-15T09:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateOfReturnFiledVisibility -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-15T09:50:51Z" finished-at="2018-09-15T09:50:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mercuryTravels.testDateOfReturnFiledVisibility.verifyDateOfReturnFiledVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="tearDown" is-config="true" duration-ms="2133" started-at="2018-09-15T09:51:06Z" finished-at="2018-09-15T09:51:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDateOfReturnFiledVisibility status=SUCCESS method=testDateOfReturnFiledVisibility.verifyDateOfReturnFiledVisibility()[pri:200, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.mercuryTravels.testDateOfReturnFiledVisibility@5ebec15]" name="endReport" is-config="true" duration-ms="140" started-at="2018-09-15T09:51:08Z" finished-at="2018-09-15T09:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.mercuryTravels.testDateOfReturnFiledVisibility -->
      <class name="com.mercuryTravels.testBranchAddress">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="beforeTest" is-config="true" duration-ms="521" started-at="2018-09-15T09:49:35Z" finished-at="2018-09-15T09:49:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="beforeMethod" is-config="true" duration-ms="19" started-at="2018-09-15T09:49:37Z" finished-at="2018-09-15T09:49:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mercuryTravels.testBranchAddress.testBranchAddress(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testBranchAddress(java.lang.String, java.lang.String)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="testBranchAddress" duration-ms="17879" started-at="2018-09-15T09:49:37Z" data-provider="addressData" finished-at="2018-09-15T09:49:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Agra]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mercury Travels Ltd.
C/o Hotel Clarks Shiraz, 54, Taj Road, Agra 282 001.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBranchAddress -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="tearDown" is-config="true" duration-ms="244" started-at="2018-09-15T09:49:55Z" finished-at="2018-09-15T09:49:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBranchAddress status=SUCCESS method=testBranchAddress.testBranchAddress(java.lang.String, java.lang.String)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-15T09:49:55Z" finished-at="2018-09-15T09:49:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mercuryTravels.testBranchAddress.testBranchAddress(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testBranchAddress(java.lang.String, java.lang.String)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="testBranchAddress" duration-ms="18711" started-at="2018-09-15T09:49:55Z" data-provider="addressData" finished-at="2018-09-15T09:50:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmedabad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mercury Travels Ltd.
103 B Abhijeet 1, 1st Floor, Mithakali Six Roads, Ahmedabad 380 006.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBranchAddress -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="tearDown" is-config="true" duration-ms="254" started-at="2018-09-15T09:50:14Z" finished-at="2018-09-15T09:50:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBranchAddress status=SUCCESS method=testBranchAddress.testBranchAddress(java.lang.String, java.lang.String)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-15T09:50:14Z" finished-at="2018-09-15T09:50:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mercuryTravels.testBranchAddress.testBranchAddress(java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testBranchAddress(java.lang.String, java.lang.String)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="testBranchAddress" duration-ms="12781" started-at="2018-09-15T09:50:14Z" data-provider="addressData" finished-at="2018-09-15T09:50:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mercury Travels Ltd.
125, Infantry Road, Bangalore 560 001xxx.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Mercury Travels Ltd.
125, Infantry Road, Bangalore 560 001.] but found [Mercury Travels Ltd.
125, Infantry Road, Bangalore 560 001xxx.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Mercury Travels Ltd.
125, Infantry Road, Bangalore 560 001.] but found [Mercury Travels Ltd.
125, Infantry Road, Bangalore 560 001xxx.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.mercuryTravels.testBranchAddress.testBranchAddress(testBranchAddress.java:63)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBranchAddress -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="tearDown" is-config="true" duration-ms="814" started-at="2018-09-15T09:50:27Z" finished-at="2018-09-15T09:50:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBranchAddress status=FAILURE method=testBranchAddress.testBranchAddress(java.lang.String, java.lang.String)[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.mercuryTravels.testBranchAddress@3d8c7aca]" name="endReport" is-config="true" duration-ms="495" started-at="2018-09-15T09:50:28Z" finished-at="2018-09-15T09:50:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.mercuryTravels.testBranchAddress -->
    </test> <!-- Test Extent reports -->
  </suite> <!-- Mercurry travels Sanity Test suite -->
</testng-results>
